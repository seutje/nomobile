<?php

/**
 * Implements hook_init().
 *
 * Adding .js file in init for aggregation purposes (it's rly tiny anyway).
 */
function nomobile_init() {
  $path = base_path() . drupal_get_path('module', 'nomobile');
  drupal_add_js($path . '/js/nomobile.js');
}

/**
 * Implements hook_field_formatter_info().
 */
function nomobile_field_formatter_info() {
  return array(
    'bota_image_nomobile'  =>  array(
      'label' =>  t("Image (Don't load on mobile)"),
      'field types' =>  array('image'),
      'settings' => array('image_style' => '', 'image_link' => ''),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 *
 * Exact copy of the original image_field_formatter_view,
 * but adding noscript wrapper.
 */
function nomobile_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  // Check if the formatter involves a link.
  if ($display['settings']['image_link'] == 'content') {
    $uri = entity_uri($entity_type, $entity);
  }
  elseif ($display['settings']['image_link'] == 'file') {
    $link_file = TRUE;
  }

  foreach ($items as $delta => $item) {
    if (isset($link_file)) {
      $uri = array(
        'path' => file_create_url($item['uri']),
        'options' => array(),
      );
    }
    $element[$delta] = array(
      '#theme' => 'image_formatter',
      '#item' => $item,
      '#image_style' => $display['settings']['image_style'],
      '#path' => isset($uri) ? $uri : '',
      '#prefix' => '<noscript class="nomobile">',
      '#suffix' => '</noscript>',
    );
  }

  return $element;
}


/**
 * Implements hook_field_formatter_settings_form().
 * 
 * Exact copy of image_field_formatter_settings_form.
 */
function nomobile_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $image_styles = image_style_options(FALSE);
  $element['image_style'] = array(
    '#title' => t('Image style'),
    '#type' => 'select',
    '#default_value' => $settings['image_style'],
    '#empty_option' => t('None (original image)'),
    '#options' => $image_styles,
  );

  $link_types = array(
    'content' => t('Content'),
    'file' => t('File'),
  );
  $element['image_link'] = array(
    '#title' => t('Link image to'),
    '#type' => 'select',
    '#default_value' => $settings['image_link'],
    '#empty_option' => t('Nothing'),
    '#options' => $link_types,
  );

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 *
 * Exact copy of image_field_formatter_settings_summary.
 */
function nomobile_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = array();

  $image_styles = image_style_options(FALSE);
  // Unset possible 'No defined styles' option.
  unset($image_styles['']);
  // Styles could be lost because of enabled/disabled modules that defines
  // their styles in code.
  if (isset($image_styles[$settings['image_style']])) {
    $summary[] = t('Image style: @style', array('@style' => $image_styles[$settings['image_style']]));
  }
  else {
    $summary[] = t('Original image');
  }

  $link_types = array(
    'content' => t('Linked to content'),
    'file' => t('Linked to file'),
  );
  // Display this setting only if image is linked.
  if (isset($link_types[$settings['image_link']])) {
    $summary[] = $link_types[$settings['image_link']];
  }

  return implode('<br />', $summary);
}
